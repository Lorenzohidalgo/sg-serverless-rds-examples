service: single-point-processing-example
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  iam:
    role:
      managedPolicies:
        - arn:aws:iam::aws:policy/AmazonRekognitionReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonRDSDataFullAccess

functions:
  imgProcessor:
    handler: index.handler
    events:
      - s3:
          bucket: !Ref animalsBucket
          event: s3:ObjectCreated:*
          rules:
            - prefix: raw/
          existing: true
          forceDeploy: true
    destinations:
      onSuccess:
        type: sns
        arn:
          Ref: SuccessTopic
      onFailure:
        type: sns
        arn:
          Ref: FailureTopic

resources:
  Resources:
    animalsBucket:
      Type: "AWS::S3::Bucket"
      Properties:
        AccessControl: Private
        BucketName: 
          Fn::Join:
            - "-"
            - - animals-bucket
              - Fn::Select:
                - 4
                - Fn::Split:
                  - "-"
                  - Fn::Select:
                    - 2
                    - Fn::Split:
                      - "/"
                      - !Ref AWS::StackId
    SuccessTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: SuccessTopic
    FailureTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: FailureTopic
    RdsVpc:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: "10.0.0.0/16"
    RdsSubnet1:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref RdsVpc
        CidrBlock: "10.0.1.0/24"
        AvailabilityZone: !Select [0, !GetAZs ""]
    RdsSubnet2:
      Type: AWS::EC2::Subnet
      Properties:
        VpcId: !Ref RdsVpc
        CidrBlock: "10.0.2.0/24"
        AvailabilityZone: !Select [1, !GetAZs ""]
    RdsSubnetGroup:
      Type: AWS::RDS::DBSubnetGroup
      Properties:
        DBSubnetGroupName: dog-or-cat-db-group
        DBSubnetGroupDescription: Dogs or Cats?
        SubnetIds: 
          - !Ref RdsSubnet1
          - !Ref RdsSubnet2
    RdsSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: "Security group for RDS instance"
        VpcId: !Ref RdsVpc
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 443
            ToPort: 443
            CidrIp: 0.0.0.0/0
    TheDb:
      Type: "AWS::RDS::DBCluster"
      Properties:
        Engine: aurora
        EngineVersion: "5.6.10a"
        EngineMode: serverless
        DBClusterIdentifier: dog-or-cat-db-cluster
        MasterUsername: admin
        MasterUserPassword: woofwoof123
        DBSubnetGroupName: !Ref RdsSubnetGroup
        AvailabilityZones:
          - !Select [0, !GetAZs ""]
          - !Select [1, !GetAZs ""]
        DatabaseName: animals
        EnableHttpEndpoint: true


